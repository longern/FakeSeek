import i18n from "i18next";
import { initReactI18next } from "react-i18next";

const resources = {
  en: {
    translation: {
      "API Key": "API Key",
      "API Mode": "API Mode",
      "Auto Search": "Auto Search",
      Back: "Back",
      "Base URL": "Base URL",
      "Browse webpage": "Browse webpage",
      Camera: "Camera",
      Cancel: "Cancel",
      Create: "Create",
      Copy: "Copy",
      Dataset: "Dataset",
      "Default model": "Default model",
      Delete: "Delete",
      "Delete Preset": "Delete Preset",
      "Execute Code": "Execute Code",
      "Fine-tuning": "Fine-tuning",
      "Found {{count}} results": "Found {{count}} results",
      "Generate Image": "Generate Image",
      "Greedy decoding": "Greedy decoding",
      Image: "Image",
      "Image Quality": "Image Quality",
      "Image Search": "Image Search",
      "In 7 days": "In 7 days",
      "In 30 days": "In 30 days",
      "New Chat": "New Chat",
      Older: "Older",
      "Preset Name": "Preset Name",
      Rename: "Rename",
      Research: "Research",
      Retry: "Retry",
      Search: "Search",
      "Search completed": "Search completed",
      "Searching...": "Searching...",
      "Select Text": "Select Text",
      Send: "Send",
      "Send message...": "Send message...",
      Settings: "Settings",
      Temperature: "Temperature",
      "Thinking...": "Thinking...",
      "Thinking finished": "Thinking finished",
      Today: "Today",
      "Tools Provider": "Tools Provider",
      "Webpage Search": "Webpage Search",
      "What can I help with?": "What can I help with?",
      Yesterday: "Yesterday",

      "confirm-close-with-unsaved-changes": "Close without saving changes?",
      "confirm-delete-record": "Delete this record?",
      "delete-chat": "Delete this chat?",
      "delete-preset-confirm": "Delete this preset?",
      "tools-provider.default": "Default",
      "tools-provider.openai-builtin": "OpenAI Built-in",
      "quality.low": "Low",
      "quality.medium": "Medium",
      "quality.high": "High",
      "temperature-help":
        "The temperature parameter controls the randomness of the generated text. Lower values will produce more deterministic and predictable output, while higher values increase diversity and creativity.",
    },
  },
  "zh-CN": {
    translation: {
      "API Key": "API 密钥",
      "API Mode": "API 模式",
      "Auto Search": "自动搜索",
      Back: "返回",
      "Base URL": "API 地址",
      "Browse webpage": "浏览网页",
      Camera: "相机",
      Cancel: "取消",
      Create: "创建",
      Copy: "复制",
      Dataset: "数据集",
      "Default model": "默认模型",
      Delete: "删除",
      "Delete Preset": "删除预设",
      "Execute Code": "执行代码",
      "Fine-tuning": "微调",
      "Fine-tuning jobs": "微调任务",
      "Found {{count}} results": "找到 {{count}} 个结果",
      "Generate Image": "生图",
      "Greedy decoding": "贪心解码",
      Image: "图片",
      "Image Quality": "图片质量",
      "Image Search": "图片搜索",
      "In 7 days": "7天内",
      "In 30 days": "30天内",
      "New Chat": "开启新对话",
      Older: "更早",
      "Preset Name": "预设名称",
      Rename: "重命名",
      Research: "研究",
      Retry: "重试",
      Search: "搜索",
      "Search completed": "搜索完成",
      "Searching...": "搜索中...",
      "Select Text": "选择文本",
      Send: "发送",
      "Send message...": "发送消息...",
      Settings: "设置",
      Temperature: "温度",
      "Thinking...": "思考中...",
      "Thinking finished": "思考完成",
      Today: "今天",
      "Tools Provider": "工具提供商",
      "What can I help with?": "有什么可以帮忙的？",
      "Webpage Search": "网页搜索",
      Yesterday: "昨天",

      "confirm-close-with-unsaved-changes": "关闭并放弃未保存的更改？",
      "confirm-delete-record": "删除此条数据？",
      "delete-chat": "删除此对话？",
      "delete-preset-confirm": "删除此预设？",
      "quality.low": "低",
      "quality.medium": "中",
      "quality.high": "高",
      "temperature-help":
        "温度参数控制生成文本的随机性。较低的值会产生更确定和可预测的输出，而较高的值会增加多样性和创造性。",
      "tools-provider.default": "默认",
      "tools-provider.openai-builtin": "OpenAI 内置工具",
    },
  },
};

i18n
  .use(initReactI18next) // passes i18n down to react-i18next
  .use({
    type: "languageDetector",
    async: true,
    detect: (cb: (lang: string) => void) =>
      cb(typeof window !== "undefined" ? window.navigator.language : "en"),
    init: () => {},
    cacheUserLanguage: () => {},
  })
  .init({
    resources: resources,
    interpolation: {
      escapeValue: false, // react already safes from xss
    },
  });
